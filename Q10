#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define SIZE 5

char matrix[SIZE][SIZE] = {
    {'M', 'F', 'H', 'I', 'K'},
    {'U', 'N', 'O', 'P', 'Q'},
    {'Z', 'V', 'W', 'X', 'Y'},
    {'E', 'L', 'A', 'R', 'G'},
    {'D', 'S', 'T', 'B', 'C'}
};

void findPosition(char ch, int *row, int *col) {
    int i, j;
    if (ch == 'J') ch = 'I'; 
    for (i = 0; i < SIZE; i++) {
        for (j = 0; j < SIZE; j++) {
            if (matrix[i][j] == ch) {
                *row = i;
                *col = j;
                return;
            }
        }
    }
}

void encryptPair(char a, char b, char *enc1, char *enc2) {
    int row1, col1, row2, col2;
    findPosition(a, &row1, &col1);
    findPosition(b, &row2, &col2);
    
    if (row1 == row2) {  
        *enc1 = matrix[row1][(col1 + 1) % SIZE];
        *enc2 = matrix[row2][(col2 + 1) % SIZE];
    } else if (col1 == col2) {  
        *enc1 = matrix[(row1 + 1) % SIZE][col1];
        *enc2 = matrix[(row2 + 1) % SIZE][col2];
    } else {
        *enc1 = matrix[row1][col2];
        *enc2 = matrix[row2][col1];
    }
}

void prepareText(char text[], char preparedText[]) {
    int len = strlen(text), idx = 0, i;
    for (i = 0; i < len; i++) {
        if (isalpha(text[i])) {
            preparedText[idx++] = toupper(text[i]);
        }
    }

    preparedText[idx] = '\0';
}

void encryptPlayfair(char plaintext[]) {
    int len = strlen(plaintext), i, idx = 0;
    char encryptedText[200];
    
    for (i = 0; i < len; i += 2) {
        char a = plaintext[i];
        char b = (i + 1 < len) ? plaintext[i + 1] : 'X'; 
        if (a == b) b = 'X';

        encryptPair(a, b, &encryptedText[idx], &encryptedText[idx + 1]);
        idx += 2;
    }
    encryptedText[idx] = '\0';
    printf("Encrypted Text: %s\n", encryptedText);
}

int main() {
    char message[] = "Must see you over Cadogan West. Coming at once.";
    char preparedText[200];

    prepareText(message, preparedText);
    encryptPlayfair(preparedText);

    return 0;
}
